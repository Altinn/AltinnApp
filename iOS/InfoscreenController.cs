// This file has been autogenerated from a class added in the UI designer.

using System;
using MonoTouch.Foundation;
using MonoTouch.UIKit;
using AltinnApp.Core.Models;

namespace AltinnApp.iOS
{
    public partial class InfoscreenController : UIViewController
    {
        private CorePlatform.Translate _trans;

        public InfoscreenController(IntPtr handle)
            : base(handle)
        {
        }

        private void Localize()
        {
            _intro.Text = _trans.GetString("InfoscreenController_Intro");
            _headerTop.Text = _trans.GetString("InfoscreenController_HeaderTop");
            _body1.Text = _trans.GetString("InfoscreenController_Body1");
            _body2.Text = _trans.GetString("InfoscreenController_Body2");
            _body3.Text = _trans.GetString("InfoscreenController_Body3");
            _body4.Text = _trans.GetString("InfoscreenController_Body4");
            _headerBottom.Text = _trans.GetString("InfoscreenController_HeaderBottom");
            _body5.Text = _trans.GetString("InfoscreenController_Body5");
            //_outtro.Text = _trans.GetString("InfoscreenController_Bottom");

            _cancel.SetTitle(_trans.GetString("Misc_Cancel"), UIControlState.Normal);
            _continue.SetTitle(_trans.GetString("InfoscreenController_Continue"), UIControlState.Normal);
        }

        public override void ViewDidLoad()
        {
            _trans = new CorePlatform.Translate();
            Localize();
        }

        // ReSharper disable once UnusedMember.Local
        // ReSharper disable once UnusedParameter.Local
        partial void Cancel(NSObject sender)
        {
            DismissViewController(true, null);
        }

        // ReSharper disable once UnusedMember.Local
        // ReSharper disable once UnusedParameter.Local
        partial void Continue(NSObject sender)
        {
            NSUserDefaults.StandardUserDefaults.SetBool(true, "hasLaunched");
            //For the environments with the new BankID solution we use the new BankID solution
            //which is to use AppStart.aspx as a proxy for the login, we need to send along this app's URL schema and the APIKey
            var url =
                new NSUrl(AppContext.AppStartUrl + "?ApiDomain=" + AppContext.AppUrlSchema + "&ApiKey=" +
                          AppContext.ApiKey);
            UIApplication.SharedApplication.OpenUrl(url);
            AppContext.LoginMethod = 2; //External browser method
            DismissViewController(true, null);
        }
    }
}